{"map":"{\"version\":3,\"sources\":[\"/home/msradam/Projects/msradam.github.io/src/components/PostTags.js\",\"/home/msradam/Projects/msradam.github.io/src/templates/post.js\",\"/home/msradam/Projects/msradam.github.io/src/utils/global.js\"],\"names\":[\"PostTags\",\"render\",\"_this$props\",\"this\",\"props\",\"tags\",\"size\",\"react_default\",\"a\",\"createElement\",\"className\",\"map\",\"tag\",\"gatsby_browser_entry\",\"key\",\"style\",\"textDecoration\",\"to\",\"kebabCase\",\"Component\",\"PostTemplate\",\"thumbnail\",\"slug\",\"pageContext\",\"postNode\",\"data\",\"markdownRemark\",\"post\",\"frontmatter\",\"id\",\"category_id\",\"config\",\"postDefaultCategoryID\",\"childImageSharp\",\"fixed\",\"date\",\"formatDate\",\"githubLink\",\"editOnGithub\",\"twitterUrl\",\"siteUrl\",\"twitterShare\",\"encodeURIComponent\",\"title\",\"layout\",\"Helmet_default\",\"siteTitle\",\"SEO\",\"postPath\",\"postSEO\",\"gatsby_image_default\",\"href\",\"target\",\"PostTags_PostTags\",\"dangerouslySetInnerHTML\",\"__html\",\"html\",\"pageQuery\",\"__webpack_require__\",\"d\",\"__webpack_exports__\",\"url_join__WEBPACK_IMPORTED_MODULE_0__\",\"url_join__WEBPACK_IMPORTED_MODULE_0___default\",\"n\",\"_data_SiteConfig__WEBPACK_IMPORTED_MODULE_1__\",\"_data_SiteConfig__WEBPACK_IMPORTED_MODULE_1___default\",\"moment__WEBPACK_IMPORTED_MODULE_2__\",\"moment__WEBPACK_IMPORTED_MODULE_2___default\",\"moment\",\"utc\",\"format\",\"dateFormat\",\"dateFromFormat\",\"urljoin\",\"repo\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react'\\nimport kebabCase from 'lodash.kebabcase'\\nimport { Link } from 'gatsby'\\n\\nexport default class PostTags extends Component {\\n  render() {\\n    const { tags, size } = this.props\\n\\n    return (\\n      <div className=\\\"tag-container\\\">\\n        {tags &&\\n          tags.map(tag => (\\n            <Link key={tag} style={{ textDecoration: 'none' }} to={`/tags/${kebabCase(tag)}/`}>\\n              <span className={size}>{tag}</span>\\n            </Link>\\n          ))}\\n      </div>\\n    )\\n  }\\n}\\n\",\"import React, { Component } from 'react'\\nimport Helmet from 'react-helmet'\\nimport { graphql } from 'gatsby'\\nimport Img from 'gatsby-image'\\nimport Layout from '../layout'\\nimport PostTags from '../components/PostTags'\\nimport SEO from '../components/SEO'\\nimport config from '../../data/SiteConfig'\\nimport { formatDate, editOnGithub } from '../utils/global'\\n\\nexport default class PostTemplate extends Component {\\n  render() {\\n    const { slug } = this.props.pageContext\\n    const postNode = this.props.data.markdownRemark\\n    const post = postNode.frontmatter\\n    let thumbnail\\n\\n    if (!post.id) {\\n      post.id = slug\\n    }\\n\\n    if (!post.category_id) {\\n      post.category_id = config.postDefaultCategoryID\\n    }\\n\\n    if (post.thumbnail) {\\n      thumbnail = post.thumbnail.childImageSharp.fixed\\n    }\\n\\n    const date = formatDate(post.date)\\n    const githubLink = editOnGithub(post)\\n    const twitterUrl = `https://twitter.com/search?q=${config.siteUrl}/${post.slug}/`\\n    const twitterShare = `http://twitter.com/share?text=${encodeURIComponent(post.title)}&url=${\\n      config.siteUrl\\n    }/${post.slug}/&via=taniarascia`\\n\\n    return (\\n      <Layout>\\n        <Helmet>\\n          <title>{`${post.title} – ${config.siteTitle}`}</title>\\n        </Helmet>\\n        <SEO postPath={slug} postNode={postNode} postSEO />\\n        <article className=\\\"single container\\\">\\n          <header className={`single-header ${!thumbnail ? 'no-thumbnail' : ''}`}>\\n            {thumbnail ? <Img fixed={post.thumbnail.childImageSharp.fixed} /> : null}\\n            <div className=\\\"flex\\\">\\n              <h1>{post.title}</h1>\\n              <div className=\\\"post-meta\\\">\\n                <time className=\\\"date\\\">{date}</time>/\\n                <a className=\\\"twitter-link\\\" href={twitterShare}>\\n                  Share\\n                </a>\\n                /\\n                <a className=\\\"github-link\\\" href={githubLink} target=\\\"_blank\\\">\\n                  Edit on Github ✏️\\n                </a>\\n              </div>\\n              <PostTags tags={post.tags} />\\n            </div>\\n          </header>\\n          <div className=\\\"post\\\" dangerouslySetInnerHTML={{ __html: postNode.html }} />\\n          <div>\\n            {' '}\\n            <a className=\\\"button twitter-button\\\" href={twitterShare} target=\\\"_blank\\\">\\n              Share\\n            </a>{' '}\\n            <a className=\\\"button twitter-button\\\" href={twitterUrl} target=\\\"_blank\\\">\\n              Discuss\\n            </a>\\n          </div>\\n        </article>\\n      </Layout>\\n    )\\n  }\\n}\\n\\n/* eslint no-undef: \\\"off\\\" */\\nexport const pageQuery = graphql`\\n  query BlogPostBySlug($slug: String!) {\\n    markdownRemark(fields: { slug: { eq: $slug } }) {\\n      html\\n      timeToRead\\n      excerpt\\n      frontmatter {\\n        title\\n        thumbnail {\\n          childImageSharp {\\n            fixed(width: 150, height: 150) {\\n              ...GatsbyImageSharpFixed\\n            }\\n          }\\n        }\\n        slug\\n        date\\n        categories\\n        tags\\n        template\\n      }\\n      fields {\\n        slug\\n        date\\n      }\\n    }\\n  }\\n`\\n\",\"import urljoin from 'url-join'\\nimport config from '../../data/SiteConfig'\\nimport moment from 'moment'\\n\\nconst formatDate = date => moment.utc(date).format(config.dateFormat)\\n\\nconst editOnGithub = post => {\\n  const date = moment.utc(post.date).format(config.dateFromFormat)\\n  return urljoin(config.repo, '/blob/master/content/posts', `${date}-${post.slug}.md`)\\n}\\n\\nexport { formatDate, editOnGithub }\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{196:function(t,e,a){\"use strict\";a.r(e);a(201);var n=a(0),r=a.n(n),o=a(199),l=a.n(o),c=a(213),s=a.n(c),i=a(200),u=a(214),m=a.n(u),p=a(87);var d=function(t){var e,a;function n(){return t.apply(this,arguments)||this}return a=t,(e=n).prototype=Object.create(a.prototype),e.prototype.constructor=e,e.__proto__=a,n.prototype.render=function(){var t=this.props,e=t.tags,a=t.size;return r.a.createElement(\"div\",{className:\"tag-container\"},e&&e.map(function(t){return r.a.createElement(p.Link,{key:t,style:{textDecoration:\"none\"},to:\"/tags/\"+m()(t)+\"/\"},r.a.createElement(\"span\",{className:a},t))}))},n}(n.Component),h=a(206),f=a(198),b=a.n(f),g=a(207);a.d(e,\"default\",function(){return E}),a.d(e,\"pageQuery\",function(){return y});var E=function(t){var e,a;function n(){return t.apply(this,arguments)||this}return a=t,(e=n).prototype=Object.create(a.prototype),e.prototype.constructor=e,e.__proto__=a,n.prototype.render=function(){var t,e=this.props.pageContext.slug,a=this.props.data.markdownRemark,n=a.frontmatter;n.id||(n.id=e),n.category_id||(n.category_id=b.a.postDefaultCategoryID),n.thumbnail&&(t=n.thumbnail.childImageSharp.fixed);var o=Object(g.b)(n.date),c=Object(g.a)(n),u=\"https://twitter.com/search?q=\"+b.a.siteUrl+\"/\"+n.slug+\"/\",m=\"http://twitter.com/share?text=\"+encodeURIComponent(n.title)+\"&url=\"+b.a.siteUrl+\"/\"+n.slug+\"/&via=taniarascia\";return r.a.createElement(i.a,null,r.a.createElement(l.a,null,r.a.createElement(\"title\",null,n.title+\" – \"+b.a.siteTitle)),r.a.createElement(h.a,{postPath:e,postNode:a,postSEO:!0}),r.a.createElement(\"article\",{className:\"single container\"},r.a.createElement(\"header\",{className:\"single-header \"+(t?\"\":\"no-thumbnail\")},t?r.a.createElement(s.a,{fixed:n.thumbnail.childImageSharp.fixed}):null,r.a.createElement(\"div\",{className:\"flex\"},r.a.createElement(\"h1\",null,n.title),r.a.createElement(\"div\",{className:\"post-meta\"},r.a.createElement(\"time\",{className:\"date\"},o),\"/\",r.a.createElement(\"a\",{className:\"twitter-link\",href:m},\"Share\"),\"/\",r.a.createElement(\"a\",{className:\"github-link\",href:c,target:\"_blank\"},\"Edit on Github ✏️\")),r.a.createElement(d,{tags:n.tags}))),r.a.createElement(\"div\",{className:\"post\",dangerouslySetInnerHTML:{__html:a.html}}),r.a.createElement(\"div\",null,\" \",r.a.createElement(\"a\",{className:\"button twitter-button\",href:m,target:\"_blank\"},\"Share\"),\" \",r.a.createElement(\"a\",{className:\"button twitter-button\",href:u,target:\"_blank\"},\"Discuss\"))))},n}(n.Component),y=\"2735630030\"},207:function(t,e,a){\"use strict\";a.d(e,\"b\",function(){return i}),a.d(e,\"a\",function(){return u});var n=a(205),r=a.n(n),o=a(198),l=a.n(o),c=a(208),s=a.n(c),i=function(t){return s.a.utc(t).format(l.a.dateFormat)},u=function(t){var e=s.a.utc(t.date).format(l.a.dateFromFormat);return r()(l.a.repo,\"/blob/master/content/posts\",e+\"-\"+t.slug+\".md\")}}}]);","extractedComments":[]}